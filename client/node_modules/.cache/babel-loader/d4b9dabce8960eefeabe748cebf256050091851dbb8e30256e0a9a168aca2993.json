{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\butabayev.yerali\\\\Desktop\\\\erali\\\\end\\\\er15\\\\client\\\\src\\\\components\\\\DisciplineList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { DISCIPLINES_ROUTE } from \"../utils/consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DisciplineList() {\n  _s();\n  const [disciplines, setDisciplines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const handleDisciplineClick = name => {\n    history.push(`${DISCIPLINES_ROUTE}/${name}`);\n  };\n  useEffect(() => {\n    // Загрузка данных\n    fetch(\"http://localhost:3000/countries\").then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      if (Array.isArray(data)) {\n        // Собираем все дисциплины из массива стран\n        const allDisciplines = data.flatMap(country => country.disciplines || []);\n        setDisciplines(allDisciplines);\n      } else {\n        console.error(\"Неверный формат данных:\", data);\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Ошибка загрузки:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  if (disciplines.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0438\\u0441\\u0446\\u0438\\u043F\\u043B\\u0438\\u043D \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"disciplines\",\n    children: disciplines.map((discipline, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"i\",\n      onClick: () => handleDisciplineClick(discipline.name),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"flag\",\n        src: `{/images/disciplines/${discipline.name}.svg}`,\n        alt: discipline.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), discipline.name]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(DisciplineList, \"YaJt2/oewhJLZ/q08AlDakGSktQ=\", false, function () {\n  return [useHistory];\n});\n_c = DisciplineList;\nvar _c;\n$RefreshReg$(_c, \"DisciplineList\");","map":{"version":3,"names":["React","useState","useEffect","Col","useHistory","DISCIPLINES_ROUTE","jsxDEV","_jsxDEV","DisciplineList","_s","disciplines","setDisciplines","loading","setLoading","history","handleDisciplineClick","name","push","fetch","then","response","ok","Error","status","json","data","Array","isArray","allDisciplines","flatMap","country","console","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","discipline","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/butabayev.yerali/Desktop/erali/end/er15/client/src/components/DisciplineList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DISCIPLINES_ROUTE } from \"../utils/consts\";\r\n\r\nexport function DisciplineList() {\r\n    const [disciplines, setDisciplines] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleDisciplineClick = (name) => {\r\n        history.push(`${DISCIPLINES_ROUTE}/${name}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Загрузка данных\r\n        fetch(\"http://localhost:3000/countries\")\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                if (Array.isArray(data)) {\r\n                    // Собираем все дисциплины из массива стран\r\n                    const allDisciplines = data.flatMap((country) => country.disciplines || []);\r\n                    setDisciplines(allDisciplines);\r\n                } else {\r\n                    console.error(\"Неверный формат данных:\", data);\r\n                }\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Ошибка загрузки:\", error);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Загрузка...</div>;\r\n    }\r\n\r\n    if (disciplines.length === 0) {\r\n        return <div>Нет дисциплин для отображения</div>;\r\n    }\r\n\r\n    return (\r\n        <Col className=\"disciplines\">\r\n            {disciplines.map((discipline, index) => (\r\n                <div\r\n                    className=\"i\"\r\n                    onClick={() => handleDisciplineClick(discipline.name)}\r\n                    key={index}\r\n                >\r\n                    <img\r\n                        className=\"flag\"\r\n                        src={`{/images/disciplines/${discipline.name}.svg}`}\r\n                        alt={discipline.name}\r\n                    />\r\n                    {discipline.name}\r\n                </div>\r\n            ))}\r\n        </Col>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}