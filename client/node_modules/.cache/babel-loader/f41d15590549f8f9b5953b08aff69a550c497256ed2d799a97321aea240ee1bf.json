{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\butabayev.yerali\\\\Desktop\\\\erali\\\\end\\\\er15\\\\client\\\\src\\\\pages\\\\Shop.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data));\n    fetchBrands().then(data => device.setBrands(data));\n    fetchDevices(null, null, 1, 2).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n      device.setDevices(data.rows);\n      device.setTotalCount(data.count);\n    });\n  }, [device.page, device.selectedType, device.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: /*#__PURE__*/_jsxDEV(DeviceList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}, \"UK3pUfrx5U/q83gYpm2j5QfJmbk=\")), \"UK3pUfrx5U/q83gYpm2j5QfJmbk=\");\n_c2 = Shop;\nexport default Shop;\nvar _c, _c2;\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"names":["React","useContext","useEffect","Container","Row","Col","DeviceList","observer","Context","fetchBrands","fetchDevices","fetchTypes","jsxDEV","_jsxDEV","Shop","_s","_c","device","then","data","setTypes","setBrands","setDevices","rows","setTotalCount","count","selectedType","id","selectedBrand","page","children","className","md","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/butabayev.yerali/Desktop/erali/end/er15/client/src/pages/Shop.js"],"sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={9}>\n                    <DeviceList/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAClD,SAAQC,SAAS,QAAO,iBAAiB;AACzC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,SAAQC,OAAO,QAAO,UAAU;AAChC,SAAQC,WAAW,EAAEC,YAAY,EAAEC,UAAU,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxE,MAAMC,IAAI,GAAAC,EAAA,CAAGR,QAAQ,CAAAS,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACxB,MAAM;IAACE;EAAM,CAAC,GAAGhB,UAAU,CAACO,OAAO,CAAC;EAEpCN,SAAS,CAAC,MAAM;IACZS,UAAU,CAAC,CAAC,CAACO,IAAI,CAACC,IAAI,IAAIF,MAAM,CAACG,QAAQ,CAACD,IAAI,CAAC,CAAC;IAChDV,WAAW,CAAC,CAAC,CAACS,IAAI,CAACC,IAAI,IAAIF,MAAM,CAACI,SAAS,CAACF,IAAI,CAAC,CAAC;IAClDT,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAACQ,IAAI,CAACC,IAAI,IAAI;MACxCF,MAAM,CAACK,UAAU,CAACH,IAAI,CAACI,IAAI,CAAC;MAC5BN,MAAM,CAACO,aAAa,CAACL,IAAI,CAACM,KAAK,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACZQ,YAAY,CAACO,MAAM,CAACS,YAAY,CAACC,EAAE,EAAEV,MAAM,CAACW,aAAa,CAACD,EAAE,EAAEV,MAAM,CAACY,IAAI,EAAE,CAAC,CAAC,CAACX,IAAI,CAACC,IAAI,IAAI;MACvFF,MAAM,CAACK,UAAU,CAACH,IAAI,CAACI,IAAI,CAAC;MAC5BN,MAAM,CAACO,aAAa,CAACL,IAAI,CAACM,KAAK,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,MAAM,CAACY,IAAI,EAAEZ,MAAM,CAACS,YAAY,EAAET,MAAM,CAACW,aAAa,CAAE,CAAC;EAE7D,oBACIf,OAAA,CAACV,SAAS;IAAA2B,QAAA,eACNjB,OAAA,CAACT,GAAG;MAAC2B,SAAS,EAAC,MAAM;MAAAD,QAAA,eACjBjB,OAAA,CAACR,GAAG;QAAC2B,EAAE,EAAE,CAAE;QAAAF,QAAA,eACPjB,OAAA,CAACP,UAAU;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC,kCAAC;AAACC,GAAA,GA5BGvB,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAE,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}